class MyCalendarTwo {
private:
    map<int, int> pointFreq;

public:
    MyCalendarTwo() {}

    bool book(int start, int end) {
        pointFreq[start]++;
        pointFreq[end]--;
        
        // Check if this booking causes a triple booking
        int overlapCnt = 0;
        for (auto& entry : pointFreq) {
            overlapCnt += entry.second;
            if (overlapCnt > 2) {
                // Revert the changes if triple booking is detected
                pointFreq[start]--;
                pointFreq[end]++;
                return false;
            }
            // We can stop early if we have passed the 'end' point
            if (entry.first >= end) break;
        }
        return true;
    }
};
